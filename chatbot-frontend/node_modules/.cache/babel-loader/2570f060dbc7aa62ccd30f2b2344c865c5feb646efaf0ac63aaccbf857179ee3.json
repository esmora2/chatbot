{"ast":null,"code":"var _jsxFileName = \"/home/erick/chatbot/chatbot-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SimpleForm from './components/SimpleForm';\nimport './App.css';\nimport leftArrow from './img/left-arrow.png'; // Asegúrate de tener una imagen de flecha en tu carpeta de imágenes\nimport rightArrow from './img/right-arrow.png'; // Asegúrate de tener una imagen de flecha en tu carpeta de imágenes\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst images = [require('./img/image1.jpg'),\n// Cambia por el nombre de tus imágenes\nrequire('./img/image2.png'), require('./img/image3.jpg')];\nconst App = () => {\n  _s();\n  const [showChat, setShowChat] = useState(false);\n  const [question, setQuestion] = useState('');\n  const [messages, setMessages] = useState([]); // Array para almacenar el historial de mensajes\n  const [currentImage, setCurrentImage] = useState(0);\n  const startChat = () => setShowChat(true);\n  const hideChat = () => setShowChat(false);\n  const handleQuestionChange = e => setQuestion(e.target.value);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newMessage = {\n      text: question,\n      sender: 'user'\n    }; // Crear el mensaje del usuario\n    setMessages([...messages, newMessage]); // Agregar el mensaje al historial\n\n    try {\n      const res = await fetch('http://localhost:5000/api/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question\n        })\n      });\n      const data = await res.json();\n      const botMessage = {\n        text: data.response || 'Sin respuesta disponible',\n        sender: 'bot'\n      };\n      setMessages([...messages, newMessage, botMessage]); // Agregar la respuesta del bot\n    } catch (error) {\n      const errorMessage = {\n        text: 'Error al obtener respuesta.',\n        sender: 'bot'\n      };\n      setMessages([...messages, newMessage, errorMessage]);\n    }\n    setQuestion(''); // Limpiar el campo de pregunta\n  };\n  const nextImage = () => {\n    setCurrentImage((currentImage + 1) % images.length);\n  };\n  const prevImage = () => {\n    setCurrentImage((currentImage - 1 + images.length) % images.length);\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      nextImage();\n    }, 10000); // Cambia la imagen cada 10 segundos\n\n    return () => clearInterval(interval); // Limpia el intervalo al desmontar el componente\n  }, [currentImage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Asistente Universitario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Navegaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: leftArrow,\n            className: \"arrow left-arrow\",\n            alt: \"Previous\",\n            onClick: prevImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: images[currentImage],\n            className: \"carousel-image\",\n            alt: `Slide ${currentImage + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: rightArrow,\n            className: \"arrow right-arrow\",\n            alt: \"Next\",\n            onClick: nextImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Bienvenido al Chatbot de ESPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Por favor, use el chatbot para hacer sus preguntas relacionadas con la universidad.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: \"Footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot\",\n      children: [showChat && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-bubble ${msg.sender}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(SimpleForm, {\n          question: question,\n          handleQuestionChange: handleQuestionChange,\n          handleSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !showChat ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: startChat,\n          children: \"Click para chatear...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: hideChat,\n          children: \"Click para ocultar...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"Q2g1KdYc335YhcbdLBl+6J1rV+Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SimpleForm","leftArrow","rightArrow","jsxDEV","_jsxDEV","Fragment","_Fragment","images","require","App","_s","showChat","setShowChat","question","setQuestion","messages","setMessages","currentImage","setCurrentImage","startChat","hideChat","handleQuestionChange","e","target","value","handleSubmit","preventDefault","newMessage","text","sender","res","fetch","method","headers","body","JSON","stringify","data","json","botMessage","response","error","errorMessage","nextImage","length","prevImage","interval","setInterval","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","style","padding","map","msg","index","_c","$RefreshReg$"],"sources":["/home/erick/chatbot/chatbot-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SimpleForm from './components/SimpleForm';\nimport './App.css';\nimport leftArrow from './img/left-arrow.png'; // Asegúrate de tener una imagen de flecha en tu carpeta de imágenes\nimport rightArrow from './img/right-arrow.png'; // Asegúrate de tener una imagen de flecha en tu carpeta de imágenes\n\nconst images = [\n  require('./img/image1.jpg'), // Cambia por el nombre de tus imágenes\n  require('./img/image2.png'),\n  require('./img/image3.jpg'),\n];\n\nconst App = () => {\n  const [showChat, setShowChat] = useState(false);\n  const [question, setQuestion] = useState('');\n  const [messages, setMessages] = useState([]); // Array para almacenar el historial de mensajes\n  const [currentImage, setCurrentImage] = useState(0);\n\n  const startChat = () => setShowChat(true);\n  const hideChat = () => setShowChat(false);\n\n  const handleQuestionChange = (e) => setQuestion(e.target.value);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newMessage = { text: question, sender: 'user' }; // Crear el mensaje del usuario\n    setMessages([...messages, newMessage]); // Agregar el mensaje al historial\n\n    try {\n      const res = await fetch('http://localhost:5000/api/ask', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ question }),\n      });\n      const data = await res.json();\n      const botMessage = { text: data.response || 'Sin respuesta disponible', sender: 'bot' };\n      setMessages([...messages, newMessage, botMessage]); // Agregar la respuesta del bot\n    } catch (error) {\n      const errorMessage = { text: 'Error al obtener respuesta.', sender: 'bot' };\n      setMessages([...messages, newMessage, errorMessage]);\n    }\n\n    setQuestion(''); // Limpiar el campo de pregunta\n  };\n\n  const nextImage = () => {\n    setCurrentImage((currentImage + 1) % images.length);\n  };\n\n  const prevImage = () => {\n    setCurrentImage((currentImage - 1 + images.length) % images.length);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      nextImage();\n    }, 10000); // Cambia la imagen cada 10 segundos\n\n    return () => clearInterval(interval); // Limpia el intervalo al desmontar el componente\n  }, [currentImage]);\n\n  return (\n    <>\n      <div className=\"header\">\n        <h2>Asistente Universitario</h2>\n      </div>\n      <div className=\"main\">\n        <div className=\"nav\">\n          <h3>Navegación</h3>\n          <div className=\"carousel-container\">\n            <img\n              src={leftArrow}\n              className=\"arrow left-arrow\"\n              alt=\"Previous\"\n              onClick={prevImage}\n            />\n            <img\n              src={images[currentImage]}\n              className=\"carousel-image\"\n              alt={`Slide ${currentImage + 1}`}\n            />\n            <img\n              src={rightArrow}\n              className=\"arrow right-arrow\"\n              alt=\"Next\"\n              onClick={nextImage}\n            />\n          </div>\n        </div>\n        <div className=\"content\">\n          <div style={{ padding: \"20px\" }}>\n            <h1>Bienvenido al Chatbot de ESPE</h1>\n            <p>Por favor, use el chatbot para hacer sus preguntas relacionadas con la universidad.</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">Footer</div>\n      <div className=\"bot\">\n        {showChat && (\n          <div className=\"chat-container\">\n            {messages.map((msg, index) => (\n              <div key={index} className={`chat-bubble ${msg.sender}`}>\n                {msg.text}\n              </div>\n            ))}\n            <SimpleForm\n              question={question}\n              handleQuestionChange={handleQuestionChange}\n              handleSubmit={handleSubmit}\n            />\n          </div>\n        )}\n        <div>\n          {!showChat \n            ? <button className=\"btn\" onClick={startChat}>Click para chatear...</button>\n            : <button className=\"btn\" onClick={hideChat}>Click para ocultar...</button>}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}