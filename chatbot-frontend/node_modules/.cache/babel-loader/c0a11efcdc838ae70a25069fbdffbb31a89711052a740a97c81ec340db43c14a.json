{"ast":null,"code":"var _jsxFileName = \"/home/erick/chatbot/chatbot-frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleQuestionChange = e => {\n    setQuestion(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Añadir la pregunta al historial de mensajes\n    setMessages([...messages, {\n      text: question,\n      sender: 'user'\n    }]);\n    try {\n      const res = await fetch('http://localhost:5000/api/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question\n        })\n      });\n      const data = await res.json();\n      setMessages(prevMessages => [...prevMessages, {\n        text: data.response || 'Sin respuesta disponible',\n        sender: 'bot'\n      }]);\n    } catch (error) {\n      setMessages(prevMessages => [...prevMessages, {\n        text: 'Error al obtener respuesta.',\n        sender: 'bot'\n      }]);\n    }\n    setQuestion('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-bubble ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Escribe tu pregunta...\",\n        value: question,\n        onChange: handleQuestionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Preguntar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"8AjIwVZYWP7bF0P3fQkHj4E/m+o=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","question","setQuestion","messages","setMessages","handleQuestionChange","e","target","value","handleSubmit","preventDefault","text","sender","res","fetch","method","headers","body","JSON","stringify","data","json","prevMessages","response","error","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/erick/chatbot/chatbot-frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Chatbot = () => {\n  const [question, setQuestion] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const handleQuestionChange = (e) => {\n    setQuestion(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Añadir la pregunta al historial de mensajes\n    setMessages([...messages, { text: question, sender: 'user' }]);\n\n    try {\n      const res = await fetch('http://localhost:5000/api/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ question }),\n      });\n\n      const data = await res.json();\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text: data.response || 'Sin respuesta disponible', sender: 'bot' },\n      ]);\n    } catch (error) {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text: 'Error al obtener respuesta.', sender: 'bot' },\n      ]);\n    }\n\n    setQuestion('');\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chat-container\">\n        {messages.map((message, index) => (\n          <div key={index} className={`chat-bubble ${message.sender}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Escribe tu pregunta...\"\n          value={question}\n          onChange={handleQuestionChange}\n        />\n        <button type=\"submit\">Preguntar</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}