{"ast":null,"code":"var _jsxFileName = \"/home/erick/chatbot/chatbot-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState('');\n  const sendMessage = async () => {\n    const res = await fetch('http://localhost:5000/ask', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message\n      })\n    });\n    const data = await res.json();\n    setResponse(data.response); // Ajusta esto según la estructura de la respuesta\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot Asistente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatbox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.messages,\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Escribe tu mensaje...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.button,\n        onClick: sendMessage,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"20T8i7C4Cxplj75viXdaeiEeoII=\");\n_c = App;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh',\n    backgroundColor: '#f5f5f5'\n  },\n  chatbox: {\n    width: '300px',\n    padding: '10px',\n    borderRadius: '5px',\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n    backgroundColor: 'white'\n  },\n  messages: {\n    marginBottom: '10px',\n    height: '150px',\n    overflowY: 'scroll',\n    border: '1px solid #ddd',\n    padding: '5px'\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    marginBottom: '10px',\n    borderRadius: '5px',\n    border: '1px solid #ddd'\n  },\n  button: {\n    width: '100%',\n    padding: '10px',\n    borderRadius: '5px',\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    cursor: 'pointer'\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","response","setResponse","sendMessage","res","fetch","method","headers","body","JSON","stringify","data","json","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","chatbox","messages","input","value","onChange","e","target","placeholder","button","onClick","_c","display","flexDirection","alignItems","justifyContent","height","backgroundColor","width","padding","borderRadius","boxShadow","marginBottom","overflowY","border","color","cursor","$RefreshReg$"],"sources":["/home/erick/chatbot/chatbot-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n    const [message, setMessage] = useState('');\n    const [response, setResponse] = useState('');\n\n    const sendMessage = async () => {\n        const res = await fetch('http://localhost:5000/ask', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ message }),\n        });\n        const data = await res.json();\n        setResponse(data.response);  // Ajusta esto según la estructura de la respuesta\n    };\n\n    return (\n        <div style={styles.container}>\n            <h1>Chatbot Asistente</h1>\n            <div style={styles.chatbox}>\n                <div style={styles.messages}>{response}</div>\n                <input \n                    style={styles.input} \n                    value={message} \n                    onChange={(e) => setMessage(e.target.value)} \n                    placeholder=\"Escribe tu mensaje...\" \n                />\n                <button style={styles.button} onClick={sendMessage}>Enviar</button>\n            </div>\n        </div>\n    );\n}\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        backgroundColor: '#f5f5f5',\n    },\n    chatbox: {\n        width: '300px',\n        padding: '10px',\n        borderRadius: '5px',\n        boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n        backgroundColor: 'white',\n    },\n    messages: {\n        marginBottom: '10px',\n        height: '150px',\n        overflowY: 'scroll',\n        border: '1px solid #ddd',\n        padding: '5px',\n    },\n    input: {\n        width: '100%',\n        padding: '10px',\n        marginBottom: '10px',\n        borderRadius: '5px',\n        border: '1px solid #ddd',\n    },\n    button: {\n        width: '100%',\n        padding: '10px',\n        borderRadius: '5px',\n        backgroundColor: '#007bff',\n        color: 'white',\n        border: 'none',\n        cursor: 'pointer',\n    },\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}